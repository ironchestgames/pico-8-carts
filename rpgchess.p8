pico-8 cartridge // http://www.pico-8.com
version 29
__lua__

--[[


--]]

printh('debug started','debug',true)
function debug(_s1,_s2,_s3,_s4,_s5,_s6,_s7,_s8)
 local ss={_s2,_s3,_s4,_s5,_s6,_s7,_s8}
 local result=tostr(_s1)
 for s in all(ss) do
  result=result..', '..tostr(s)
 end
 printh(result,'debug',false)
end

function clone(_t)
 local _r={}
 for _k,_v in pairs(_t) do
  _r[_k]=_v
 end
 return _r
end

function sort(_t,_f)
 for _i=1,#_t do
  local _j=_i
  while _j > 1 and _f(_t[_j-1],_t[_j]) do
   _t[_j],_t[_j-1]=_t[_j-1],_t[_j]
   _j=_j-1
  end
 end
end

local function shuffle(_t)
 for _i=#_t,2,-1 do
  local _j=flr(rnd(_i))+1
  _t[_i],_t[_j]=_t[_j],_t[_i]
 end
 return _t
end

local function sortony(_a,_b)
 return _b.y < _a.y
end

local function sortonxdesc(_a,_b)
 return _b.x > _a.x
end

local function sortonxasc(_a,_b)
 return _b.x < _a.x
end

local function sortonw(_a,_b)
 return _b.w > _a.w
end


local rows=11
local cols=16
local arlsen=rows*cols-1 -- 11 rows, 14 cols
local theme=0
local themepalt={[0]=15,15,}
local themecls={[0]=3,5,}
local backdrop=shuffle{[0]=0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,}
local flowers={
 [flr(rnd(rows))*rows+flr(rnd(cols))]=flr(rnd(2)-1),
 [flr(rnd(rows))*rows+flr(rnd(cols))]=flr(rnd(2)-1),
 [flr(rnd(rows))*rows+flr(rnd(cols))]=flr(rnd(2)-1),
 [flr(rnd(rows))*rows+flr(rnd(cols))]=flr(rnd(2)-1),
 [flr(rnd(rows))*rows+flr(rnd(cols))]=flr(rnd(2)-1),
}
local board={}
local creatures
local summoners
local playersummoner
local isvictory

local function getcreatureonpos(_x,_y)
 for _c in all(creatures) do
  if _c.x == _x and _c.y == _y then
   return _c
  end
 end
 -- return nil
end

local function copydeltas(_t)
 local _r=clone(_t)
 for _k,_v in pairs(_r) do
  _r[_k]=clone(_v)
 end
 return _r
end

attackdeltas={
 spearman={
  {x=1,y=0,w=1},
  {x=1,y=-1,w=1},
  {x=1,y=1,w=1},
  {x=0,y=-1,w=1},
  {x=0,y=1,w=1},
 },
 archer={
  {x=1,y=1,w=12},
 },
}

movdeltas={
 spearman={
  {x=1,y=0,w=3},
  {x=1,y=-1,w=2},
  {x=1,y=1,w=2},
  {x=0,y=-1,w=1},
  {x=0,y=1,w=1},
 },
 spider={
  {x=2,y=0,w=4},
  {x=1,y=0,w=3},
  {x=0,y=2,w=2},
  {x=0,y=-2,w=2},
  {x=1,y=-1,w=2},
  {x=1,y=1,w=2},
  {x=0,y=-1,w=1},
  {x=0,y=1,w=1},
 },
 bat={
  {x=1,y=0,w=3},
  {x=1,y=-1,w=2},
  {x=1,y=1,w=2},
 },
 hawk_1={
  {x=1,y=1,w=3},
  {x=1,y=0,w=2},
 },
 hawk_2={
  {x=1,y=-1,w=3},
  {x=1,y=0,w=2},
 },
 snake_1={
  {x=1,y=0,w=3},
  {x=0,y=1,w=2},
  {x=0,y=-1,w=2},
  {x=1,y=1,w=1},
  {x=1,y=-1,w=1},
 },
 snake_2={
  {x=1,y=0,w=2},
  {x=0,y=1,w=2},
  {x=0,y=-1,w=3},
  {x=1,y=1,w=1},
  {x=1,y=-1,w=1},
 },
 snake_3={
  {x=1,y=0,w=3},
  {x=0,y=1,w=2},
  {x=0,y=-1,w=2},
  {x=1,y=1,w=1},
  {x=1,y=-1,w=1},
 },
 snake_4={
  {x=1,y=0,w=2},
  {x=0,y=1,w=3},
  {x=0,y=-1,w=2},
  {x=1,y=1,w=1},
  {x=1,y=-1,w=1},
 },
}

updates={
 hawk=function(_c,_s)
  if not _c.movdeltas then
   if _c.y >= _s.y then
    _c.movdeltai=2
   else
    _c.movdeltai=1
   end
  elseif _c.y <= 0 then
   _c.movdeltai=1
  elseif _c.y >= rows-1 then
   _c.movdeltai=2
  end
  _c.movdeltas=movdeltas['hawk_'.._c.movdeltai]
 end,
 snake=function(_c,_s)
  if _c.active then
   _c.movdeltai+=1
   if _c.movdeltai > 4 then
    _c.movdeltai=1
   end
   _c.movdeltas=movdeltas['snake_'.._c.movdeltai]
  end
 end,
}

creaturetypes={
 spearman={
  typ=144,
  hp=1,
  movdeltas='spearman',
  attackdeltas='spearman',
  movanimtyp='moving_jumping',
  attackanimtyp='attacking_stabbing',
  special_spearwall=1,
 },
 knifeman={
  typ=147,
  hp=1,
  movdeltas='spearman',
  attackdeltas='spearman',
  movanimtyp='moving_jumping',
  attackanimtyp='attacking_stabbing',
 },
 archer={
  typ=149,
  hp=1,
  movdeltas='spearman',
  attackdeltas='archer',
  movanimtyp='moving_jumping',
  attackanimtyp='attacking_shooting',
  special_shooting=1,
 },
 spider={
  typ=160,
  hp=2,
  movdeltas='spider',
  attackdeltas='spearman',
  movanimtyp='moving_jumping',
  attackanimtyp='attacking_stabbing',
  special_makecocoon=1,
 },
 bat={
  typ=162,
  hp=1,
  movdeltas='bat',
  attackdeltas='spearman',
  movanimtyp='moving_flying',
  attackanimtyp='attacking_stabbing',
  special_ignoreboard=1,
 },
 hawk={
  typ=164,
  hp=1,
  movdeltas='hawk_',
  attackdeltas='spearman',
  movanimtyp='moving_flying',
  attackanimtyp='attacking_stabbing',
  special_ignoreboard=1,
  special_update='hawk',
  movdeltai=1,
 },
 panther={
  typ=168,
  hp=2,
  movdeltas='spearman',
  attackdeltas='spearman',
  movanimtyp='moving_jumping',
  attackanimtyp='attacking_stabbing',
  special_moveonkill=1,
 },
 snake={
  typ=166,
  hp=1,
  movdeltas='snake_',
  attackdeltas='spearman',
  movanimtyp='moving_flying',
  attackanimtyp='attacking_stabbing',
  special_update='snake',
  movdeltai=0,
  special_poison=1,
 },
}

playersummoner={id=1,walkdir=1,x=1,y=5,typ=30,active=true,hp=3,sel=1,availablesels={},creatures={
 {'archer'},
 {'archer'},
 {'knifeman'},
 {'knifeman'},
 {'spearman'},
 {'spearman'},
}}
enemysummoner={id=2,walkdir=-1,x=14,y=5,typ=14,active=false,hp=3,sel=6,creatures=shuffle{
 {'snake'},
 {'panther'},
 {'bat'},
 {'bat'},
 {'bat'},
 {'hawk'},
 {'spider'},
 }}

summoners={playersummoner,enemysummoner}

creatures={}

for _i=1,2+flr(rnd(10)) do
 local _x,_y=_i%cols,_i\cols
 if not ((playersummoner.x == _x and playersummoner.y == _y) or
    (enemysummoner.x == _x and enemysummoner.y == _y)) then
  board[flr(rnd(arlsen))]=10+flr(rnd(3))
 end
end


local function summoncreature(_s)
 local _c=del(_s.creatures,_s.creatures[1])
 if _c then
  local _ctyp=creaturetypes[_c[1]]
  _c.x,_c.y=_s.x-_s.walkdir,_s.sel
  _c.active=_s.active
  _c.walkdir=_s.walkdir
  _c.summoner=_s.id
  _c.isincapacitated=nil

  for _k,_v in pairs(_ctyp) do
   _c[_k]=_v
  end
  _c.movdeltas=movdeltas[_ctyp.movdeltas]
  _c.attackdeltas=attackdeltas[_ctyp.attackdeltas]
  _c.special_update=updates[_c.special_update]

  add(creatures,_c)
 end
end


local tick=0
local tickwrap=64

local animtick=0
local animlen=tickwrap/4

function _update60()

 local _1creaturectyp
 if playersummoner.creatures[1] then
  _1creaturectyp=creaturetypes[playersummoner.creatures[1][1]]
 end
 for _i=0,rows-1 do
  local _isboard=board[_i*cols]
  if _1creaturectyp and _1creaturectyp.special_ignoreboard then
   _isboard=nil
  end
  if not (_isboard or getcreatureonpos(0,_i)) then
   playersummoner.availablesels[_i]=true
  else
   playersummoner.availablesels[_i]=nil
  end
 end

 if btnp(2) then
  playersummoner.sel-=1
 elseif btnp(3) then
  playersummoner.sel+=1
 end

 playersummoner.sel=mid(0,playersummoner.sel,rows-1)

 if btnp(4) then
  if (not playersummoner.availablesels[playersummoner.sel]) then
   sfx(9)
  else
   summoncreature(playersummoner)
  end
 end

 if animtick > 0 then
  animtick-=1

 elseif playersummoner.hp <= 0 or summoners[2].hp <= 0 then

  if playersummoner.hp <= 0 then
   isvictory=false
  else
   isvictory=true
  end

 else -- update

  tick+=1

  if tick >= tickwrap then

   local _sortx=sortonxasc
   if playersummoner.active then
    _sortx=sortonxdesc
   end

   sort(creatures,_sortx)

   -- update creatures
   for _c in all(creatures) do

    local _summoner=summoners[_c.summoner]
    local _enemysummoner=summoners[(_c.summoner%2)+1]
    local _ctyp=creaturetypes[_c[1]]

    _c.anim=nil

    if _c.special_update then
     _c.special_update(_c,_summoner)
    end

    if (_c.active or _c.special_spearwall == 2) and not _c.isincapacitated then

     local _attacks=copydeltas(_c.attackdeltas)

     if _c.special_shooting then
      _attacks={}
      local _ad=clone(attackdeltas[_ctyp.attackdeltas][1])
      if _c.x == _enemysummoner.x then
       _ad.x=0
      end
      for _i=1,rows do
       local _x,_y=_c.x+_i*_ad.x,_c.y+_i*_ad.y
       local _other=getcreatureonpos(_x,_y)
       if _x < 0 or _x > cols or _y < 0 or _y >= rows or board[_y*cols+_x] or (_other and _other.summoner == _c.summoner) then
        break
       end
       add(_attacks,{x=_i*_ad.x,y=_i*_ad.y,w=_ad.w-_i})
      end
      for _i=1,rows do
       local _x,_y=_c.x+_i*_ad.x,_c.y+_i*-_ad.y
       local _other=getcreatureonpos(_x,_y)
       if _x < 0 or _x > cols or _y < 0 or _y >= rows or board[_y*cols+_x] or (_other and _other.summoner == _c.summoner) then
        break
       end
       add(_attacks,{x=_i*_ad.x,y=_i*-_ad.y,w=_ad.w-_i})
      end
     end

     for _a in all(_attacks) do
      local _ax,_ay=_c.x+_a.x*_c.walkdir,_c.y+_a.y
      local _other=getcreatureonpos(_ax,_ay)
      if _other == nil or
         _other.summoner == _c.summoner then
       if not (_ax == _enemysummoner.x and _ay == _enemysummoner.y) then 
        del(_attacks,_a)
       end
      end
     end
     if #_attacks > 0 then

      _c.anim=_c.attackanimtyp

      -- todo: add shots to effects

      _c.attx=_c.x+_attacks[1].x*_c.walkdir
      _c.atty=_c.y+_attacks[1].y

      local _other=getcreatureonpos(_c.attx,_c.atty)
      if _other then
       _other.hp-=1
       if _c.special_poison then
        _other.hp=0
       end
       if _other.hp <= 0 then
        del(creatures,_other)
        add(summoners[_other.summoner].creatures,_other)
        if _c.special_moveonkill and
           not board[_c.atty*cols+_c.attx] then
         _c.anim=_c.movanimtyp
         _c.lastmovx=_c.x
         _c.lastmovy=_c.y
         _c.x=_c.attx
         _c.y=_c.atty
        end
       elseif _c.special_makecocoon then
        _other.typ=15
        _other.isincapacitated=true
       end
      elseif _c.attx == _enemysummoner.x and _c.atty == _enemysummoner.y then
       _enemysummoner.hp-=1
      end

     elseif _c.active and not _c.isincapacitated then -- move

      _c.anim=_c.movanimtyp

      local _moves=copydeltas(_c.movdeltas)

      if _c.x == _enemysummoner.x then
       local _enemysummonerdy=abs(_enemysummoner.y-_c.y)
       for _m in all(_moves) do
        if _c.y+_m.y-_enemysummonerdy < _enemysummonerdy then
         _m.w+=10
        end
       end
       add(_moves,{x=0,y=sgn(_enemysummoner.y-_c.y),w=0.1})
      end

      for _m in all(_moves) do
       local _nextx,_nexty=_c.x+_m.x*_c.walkdir,_c.y+_m.y

       local _isboard=board[_nexty*cols+_nextx]
       if _c.special_ignoreboard then
        _isboard=nil
       end

       if _nextx < 0 or
          _nextx > 15 or
          _nexty < 0 or
          _nexty >= rows or
          _isboard or
          getcreatureonpos(_nextx,_nexty) or
          (_nextx == _summoner.x and _nexty == _summoner.y) or
          (_nextx == _enemysummoner.x and _nexty == _enemysummoner.y) then
        del(_moves,_m)
       elseif _nextx == _c.lastmovx and _nexty == _c.lastmovy then
        _m.w-=0.5
       end
       if abs(_nexty-_enemysummoner.y) > abs(_c.y-_enemysummoner.y) then
        _m.w-=0.5
       end
      end

      sort(_moves,sortonw)

      _c.lastmovx,_c.lastmovy=_c.x,_c.y
      if #_moves > 0 then
       _c.x+=_moves[1].x*_c.walkdir
       _c.y+=_moves[1].y
      end

     end
    end

    _c.active=not _c.active
   end

   for _c in all(creatures) do
    if _c.special_spearwall and not _c.active then
     local _otherup=getcreatureonpos(_c.x,_c.y-1)
     local _otherdown=getcreatureonpos(_c.x,_c.y+1)
     if (_otherup and _otherup.summoner == _c.summoner and _otherup.special_spearwall) or
        (_otherdown and _otherdown.summoner == _c.summoner and _otherdown.special_spearwall) then
      _c.special_spearwall=2
     else
      _c.special_spearwall=1
     end
    end
   end

   for _s in all(summoners) do
    _s.active=not _s.active
   end

   -- next turn
   tick=0
   animtick=animlen

   -- random ai
   if #enemysummoner.creatures > 0 then
    local _sel=flr(rnd(rows-1))
    if rnd() > 0.5 and
       not (board[_sel*cols+15] or getcreatureonpos(15,_sel)) then
     enemysummoner.sel=_sel
     summoncreature(enemysummoner)
    end
   end
  end
 end
end

function _draw()
 palt(0,false)
 cls(themecls[theme])

 palt(1,false)
 local _themepaltcol=themepalt[theme]
 palt(_themepaltcol,true)

 -- draw backdrop
 for _i=0,#backdrop do
  local _x,_y=_i%16,_i\16
  spr(theme*16+backdrop[_i]+(_i\16)*2,_x*8,_i\32*88+_y*8)
 end

 local _yoff=16

 -- draw flowers
 for _i=0,arlsen do
  if flowers[_i] then
   local _x,_y=_i%16,_i\16
   spr(theme*16+9+flowers[_i],_x*8,_yoff+_y*8)
  end
 end

 -- draw board
 for _i=0,arlsen do
  _p=board[_i]
  if _p then
   local _x,_y=_i%cols,_i\cols
   spr(theme*16+_p,_x*8,_yoff+_y*8)
  end
 end

 palt(_themepaltcol,false)
 palt(1,true)

 -- draw summoners
 for _s in all(summoners) do
  spr(_s.typ,_s.x*8,_yoff+_s.y*8,1,1,_s.walkdir == -1)
 end

 -- draw player next summon
 local _col=10
 if not playersummoner.availablesels[playersummoner.sel] then
  _col=8
 end
 rect(0,_yoff+playersummoner.sel*8-1,7,_yoff+playersummoner.sel*8+7,_col)
 print(#playersummoner.creatures,2,_yoff+playersummoner.sel*8+1)

 local _c=playersummoner.creatures[1]
 if _c then
  local _ctyp=creaturetypes[_c[1]]
  if tick%tickwrap > tickwrap/2 then
   spr(_ctyp.typ,0,_yoff+playersummoner.sel*8)
  end
 end
 
 -- draw creatures
 sort(creatures,sortony)
 for _c in all(creatures) do
  for _a in all(_c.attacks) do
   rect((_c.x+_a.x)*8,_yoff+(_c.y+_a.y)*8,(_c.x+_a.x)*8+7,_yoff+(_c.y+_a.y)*8+7,8)
  end
  local _foff=0
  local _animxoff,_animyoff=0,0
  if _c.active and not _c.isincapacitated then
   _foff=flr(tick/(tickwrap/5))%2
  elseif _c.special_spearwall == 2 then
   _foff=2
  end
  if _c.anim and animtick > 0 then
   local _p=animtick/animlen
   if _c.anim == 'moving_jumping' then
    _animxoff=(_c.lastmovx-_c.x)*_p^2*8
    _animyoff=(-_p^2+_p)*-10+(_c.lastmovy-_c.y)*_p^2*8
   elseif _c.anim == 'moving_flying' then
    _animxoff=(_c.lastmovx-_c.x)*_p^2*8
    _animyoff=(_c.lastmovy-_c.y)*_p^2*8
    _foff=1
   elseif _c.anim == 'attacking_stabbing' then
    _animxoff=(_c.attx-_c.x)*_p^3*5
    _animyoff=(_c.atty-_c.y)*_p^3*5
   elseif _c.anim == 'attacking_shooting' then -- todo: remove this and add shots to effects instead
    line(_c.x*8+7,_yoff+_c.y*8+4,_c.attx*8+4,_yoff+_c.atty*8+4,7)
   end
  end
  spr(_c.typ+_foff,_animxoff+_c.x*8,_yoff+_animyoff+_c.y*8,1,1,_c.walkdir == -1)
 end

 -- draw effects

 -- draw isvictory
 if isvictory == true then
  print('victory!',64,64,7)
 elseif isvictory == false then
  print('defeat',64,64,7)
 end

 -- draw gui
 rectfill(0,120,127,127,0)
 for _i=0,playersummoner.hp-1 do
  spr(240,_i*8,120)
 end
 for _i=enemysummoner.hp-1,0,-1 do
  spr(240,119-_i*8,120)
 end

 -- rectfill(0,0,127,8,0)
 -- print(stat(1),1,1,7)
end

__gfx__
330b030b330b330bb30b030bb30b030bfffff0fff0ffffff3055505030555050fffffffffffffffffff0ffffff000ffffff00fffff00ffff1000010111111111
330b030b3300030b330b030b330b030bffff0b0f0b0fffff3505030330555503ffffffffffffffffff0b0ffff0bbb0ffff0660fff0660fff0ffff0a011111111
30bb30b330bbb0b330bb30b330bb30b3ff0f0b0f0b0fffff5030030355055503ffddffffffafffffff0b0fff0b3b330fff06d60ff06dd0ff060f004011111111
30b330b30b3b30b330b3303330b33033f0b0b330b330ff0f5030355050305033fffffffffffbffaff0b330ff03b3b30ff06ddd0ff06d6d0f0666604010000111
0bb3330303b30b030b33300040333300f0b033503350f0b00333055503330335fffffffffffbfbfff0b330ff0b33330ff06ddd6006dd000f0066604006d6d001
0b3333030b330b030b33330f0333330f0b33035503550b350335055503350355ffffdddffffffbff0b33330ff03330ff06dd66d006d0660f0400004006d6d6d0
b0333330b030b3300333330ff00400ff03350555035503553335505033355050fffffffffffffbff0333330fff040fff06ddddd006006dd0044240400d5d5d50
b0303330b000b330f00400ffffffffff03555055055550553355505033555050fffffffffffffffff00400ffff040fffffffffff0d06ddd00442404010000001
00000000000000000000000000000000000fff00000000000000000000000000ffffffffffffffffff000ffff0ffff0fffffffffffffffff1000000011111111
42042204220022044204220422080204420fff04420442044204220442042204fffffffffffffffff09990ff040ff040f000000fff0f0f0f0ffff07011111111
000000000002102000000000000e000040000000400020000000000000000000ffffddfff4ffffff0949440ff040f02004420420f04040400f0f004011111111
0442044200210002044204420402044204420442044204420442044204420442ffffffffff4fffff0494940ff020040f00000000f04040400ffff04011111111
0000000000210002000000000002000000000000000000000000000000000090ffffffffff4ff4ff0944440fff0420ff04204220000000000000004011111111
2204420420210004220442044202020422044204220442042204420420900904fdddffffff4f4ffff04440fffff040ff00000000044444200dd6d04011111111
0000000000210002000000000000000000000000000000000000000000090900ffffffffffff4fffff020ffffff040ff04220420f00000000dd6d04011111111
0442044200444442044204420442044204420442044204420442044204090902ffffffffffffffffff020fffff04220ffffffffff04040400dd6d04011111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
10000101111111011000011110000111111111111000001111110011111111111111111111111111111111111111111111111111111111111111111111111111
0ffff060100000600ffff0110ffff011100001110ffff40110000401111111111111111111111111111111111111111111111111111111111111111111111111
0f0f00600ffff0600f0f00110f0f00110ffff0110f0f00400ffff040111111111111111111111111111111111111111111111111111111111111111111111111
0ffff0400f0f00400ffff0060ffff0110f0f00110ffff0400f0f0040111111111111111111111111111111111111111111111111111111111111111111111111
000000400ffff04000000060000000000ffff011000000400ffff040111111111111111111111111111111111111111111111111111111111111111111111111
0dddd040000000400ddd04010ddd0660000000000ddd004000000040111111111111111111111111111111111111111111111111111111111111111111111111
000000400dddd04000004011000000010ddd0660000004010ddd0401111111111111111111111111111111111111111111111111111111111111111111111111
01111040000000400104001101110111000000010111001100000011111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111101111111111111111111111100001111111111100110011111111111111111111111111111111111111111111111111111111
10001111111111110001000111050111000110001110011111033730111000011005005010001100111111111111111111111111111111111111111111111111
022201111000011105505501105550110d7007d01107701111033000110337300505555005050050111111111111111111111111111111111111111111111111
0202200102222011105550111050501110d77d01107dd70110103301100333000555a5a005055550111111111111111111111111111111111111111111111111
02020010020200011105011110010011110dd01110dffd010300033003003330055555500555a5a0111111111111111111111111111111111111111111111111
0000dd000202dd001110111111111111110f0f0110d00d0109333390093333900555555005555550111111111111111111111111111111111111111111111111
01009d9000009d901111111111111111111010111001100110999901109999010555555005555550111111111111111111111111111111111111111111111111
01010000010100001111111111111111111111111111111111000011110000110505005005050050111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
00000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
076d6600111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
7e868860111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
688888d0111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
688888d0111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
06888d00111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
00d8d000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
000d0000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
__sfx__
000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100000061500c100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100
