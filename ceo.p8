pico-8 cartridge // http://www.pico-8.com
version 32
__lua__

local ceox,ceofloor,ceocarry,ceotalking,ceooption
local floors,people

function isintersect(_ax1,_ax2,_bx1,_bx2)
 local _bisbigger=_ax2-_ax1 < _bx2-_bx1
 return (_bisbigger and (_ax1 >= _bx1 and _ax1 <= _bx2) or (_ax2 >= _bx1 and _ax2 <= _bx2)) or
    (not _bisbigger and (_bx1 >= _ax1 and _bx1 <= _ax2) or (_bx2 >= _ax1 and _bx2 <= _ax2)) 
end

function getframe(_stuff)
 return _stuff.frames[1][1],_stuff.frames[1][2],_stuff.frames[1][3],_stuff.frames[1][4]
end

function getwidth(_stuff)
 return _stuff.frames[1][3]
end

function newplant()
 return {
  x=0,
  ismovable=1,
  frames={
   {5,0,5,6},
  },
 }
end

peoplefuncs={
 plantsales={
  name='salesperson',
  options={
   {
    str='buy plant',
    func=function(_person)
     ceocarry=newplant()
     _person.isleaving=true
    end,
   },
   {
    str='no thanks',
    func=function(_person)
     _person.isleaving=true
    end,
   },
  },
 },
}

function _init()
 ceox,ceofloor,ceocarry=64,1
 floors={
  { -- lobby
   {
    x=10,
    ismovable=1,
    frames={
     {5,0,5,6},
    },
   },
   {
    x=50,
    ismovable=1,
    frames={
     {5,0,5,6},
    },
   },
  },
  {}, -- test
 }

 --[[ people states:
      1 - moving to target
      2 - doing activity until counter
 --]]
 people={
  {
   x=10,
   floor=1,
   clr=8,
   state=1,
   func='plantsales',
  },
 }
end

function _update60()

 if ceotalking then
  local _func=peoplefuncs[ceotalking.func]
  local _optionscount=#_func.options
  if btnp(2) then
   ceooption=mid(1,ceooption-1,_optionscount)
  elseif btnp(3) then
   ceooption=mid(1,ceooption+1,_optionscount)
  end

  if btnp(5) then
   ceotalking=nil
  end

  if btnp(4) then
   _func.options[ceooption].func(ceotalking)
   ceotalking=nil
  end

  return
 end

 -- input
 local _speed=1
 if ceocarry then
  _speed=.5
 end
 if btn(0) then
  ceox=mid(3,ceox-_speed,121)
 elseif btn(1) then
  ceox=mid(3,ceox+_speed,121)
 end

 if btnp(2) then
  ceofloor=mid(1,ceofloor+1,#floors)
 elseif btnp(3) then
  ceofloor=mid(1,ceofloor-1,#floors)
 end

 if btnp(5) then
  if ceocarry == nil then
   for _stuff in all(floors[ceofloor]) do
    if _stuff.ismovable and ceox+4 >= _stuff.x and ceox <= _stuff.x+getwidth(_stuff) then
     ceocarry=del(floors[ceofloor],_stuff)
     break
    end
   end
  else
   local _freespace=true
   for _stuff in all(floors[ceofloor]) do
    if isintersect(_stuff.x-1,_stuff.x+getwidth(_stuff)+1,ceox,ceox+getwidth(ceocarry)) then
     _freespace=nil
     break
    end
   end
   if _freespace then
    add(floors[ceofloor],ceocarry)
    ceocarry.x=ceox
    ceocarry=nil
   end
  end
 end

 if ceocarry == nil and btnp(4) then
  for _person in all(people) do
   if _person.floor == ceofloor and isintersect(_person.x,_person.x+4,ceox,ceox+4) then
    ceotalking=_person
    ceooption=1
   end
  end
 end

end

function _draw()
 cls(12)

 -- draw floors
 for _i=1,#floors do
  local _y=122-_i*18
  rectfill(3,_y,124,_y+17,7)
  line(3,_y,124,_y,1)

  -- draw stuff on floor
  for _stuff in all(floors[_i]) do
   local _sx,_sy_,_sw,_sh=getframe(_stuff)
   sspr(_sx,_sy_,_sw,_sh,_stuff.x,_y+18-_sh)
  end
 end

 -- draw people
 for _person in all(people) do
  -- todo: colors
  sspr(0,19,4,5,_person.x,135-_person.floor*18)
 end

 -- draw ceo
 if ceocarry then
  local _sx,_sy_,_sw,_sh=getframe(ceocarry)
  sspr(_sx,_sy_,_sw,_sh,ceox,135-ceofloor*18-12+_sh)
  sspr(4,19,4,5,ceox,135-ceofloor*18)
 else
  sspr(0,19,4,5,ceox,135-ceofloor*18)
 end

 -- draw ceotalking
 if ceotalking then
  local _func=peoplefuncs[ceotalking.func]
  local _h=18+(#_func.options-1)*8
  rectfill(8,9,117,9+_h,15)
  rectfill(9,8,118,8+_h,7)
  print('\x97',115,6,2)

  print(_func.name,12,11,1)
  for _i=1,#_func.options do
   local _prefix='\f7\x8e \f1'
   if ceooption == _i then
    _prefix='\f2\x8e \f1'
   end
   print(_prefix.._func.options[_i].str,12,19+(_i-1)*8)
  end
 end
 
end

__gfx__
01110011100000000111110000000000000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1cc711333100000111555100111111111100001ff100000000000000000000000000000000000000000000000000000000000000000000000000000000000000
17cc11333100001441155101412222221410001ff100000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1ccc10141000111441111111412222221410001dd100100000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111110016144416661144444444441111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000
16661166610016661666661000110000000166666666610000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000001100111110011ff1111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000011ff101b3310141ff1222141000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000001441f10133310141ee1222141000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000001441e11111111144444444441000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000001444116666661000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000016666666661000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01101111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1ff11ff1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1ff11ff1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1ee11ee1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1ee11ee1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
16666666666666166666666666661666666666666616666666666666166666666666661000000000000000000000000000000000000000000000000000000000
16666666666666166666666666661666666666666616666666666666166666666666661000000000000000000000000000000000000000000000000000000000
16666666666666166666666666661666666666666616666666666666166666666666661000000000000000000000000000000000000000000000000000000000
16666666666666166666666666661666666666666616666666666666166666666666661000000000000000000000000000000000000000000000000000000000
16666666666666166666666666661666666666666616666666666666166666666666661000000000000000000000000000000000000000000000000000000000
166666666666661666666a6666661666666a6666661666666a6666661666666a6666661000000000000000000000000000000000000000000000000000000000
16666666666666166666666666661666666666666616666666666666166666666666661000000000000000000000000000000000000000000000000000000000
16611111111166166111111111661661111111116616611111111166166111111111661000000000000000000000000000000000000000000000000000000000
166166616661661661661d166166166161ddd1616616611ddddd11661661ddddddd1661000000000000000000000000000000000000000000000000000000000
166166616661661661661d166166166161ddd1616616611ddddd11661661ddddddd1661000000000000000000000000000000000000000000000000000000000
166166616661661661661d166166166161ddd1616616611ddddd11661661ddddddd1661000000000000000000000000000000000000000000000000000000000
166166616661661661661d166166166161ddd1616616611ddddd11661661ddddddd1661000000000000000000000000000000000000000000000000000000000
166166616661661661661d166166166161ddd1616616611ddddd11661661ddddddd1661000000000000000000000000000000000000000000000000000000000
166166616661661661661d166166166161ddd1616616611ddddd11661661ddddddd1661000000000000000000000000000000000000000000000000000000000
166166616661661661661d166166166161ddd1616616611ddddd11661661ddddddd1661000000000000000000000000000000000000000000000000000000000
