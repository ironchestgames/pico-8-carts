pico-8 cartridge // http://www.pico-8.com
version 16
__lua__

-- directions
none=0

w=1
e=2

s=3
sw=4
se=5

n=6
nw=7
ne=8

-- states
idling=1
walking=2
attacking=3
blocking=4

function newactor(c)
	a={}
	a.x=0
	a.y=0
	a.spd=1
	a.direction=none
	a.newdir=none
	a.faceright=true
	a.state=idling
	a.newstate=idling
	a.sprshts={} -- speed,â€¦sprites
	a.curframe=0 -- offset
	a.animspd=10
	a.animcount=a.animspd
	a.pals={}
	
	if (c!=nil) add(c,a)
	return a
end

function updateactor(a)
	-- run ai
	if a.decide then
		a.decide()
	end
	
	-- update direction
	if a.state==idling or
				a.state==walking then
		a.direction=a.newdir
	else
		a.direction=none
	end
	
	-- update position
	newx=a.x
	newy=a.y
	if a.direction==none then
		-- do nothing
	elseif a.direction==e then
		newx+=a.spd
	elseif a.direction==se then
		newx+=a.spd
		newy+=a.spd
	elseif a.direction==s then
		newy+=a.spd
	elseif a.direction==sw then
		newx+=-a.spd
		newy+=a.spd
	elseif a.direction==w then
		newx+=-a.spd
	elseif a.direction==nw then
		newx+=-a.spd
		newy+=-a.spd
	elseif a.direction==n then
		newy+=-a.spd
	elseif a.direction==ne then
		newx+=a.spd
		newy+=-a.spd
	end
	a.x=newx
	a.y=newy

	-- update state
	if a.newstate!=a.state then
  		a.curframe=0
  		a.state=a.newstate
	end
	
	-- update faceright
	if a.direction==w or
 			a.direction==sw or
 			a.direction==nw then
 	a.faceright=false
	elseif a.direction==e or
 			a.direction==se or
 			a.direction==ne then
		a.faceright=true
	end
end

function newitem(isactor)
	if isactor then
		i=newactor()
	else
		i={}
		i.pals={}
	end
	i.isactor=isactor
	i.buf_spd=1
	i.buf_aspd=1
	return i
end


--item declarations

-- cat sprshts
swordsprshts={
	{0, 16},
	{5, 17,18,19},
	{5, 20,21,22},
	{0, 23}
}

shieldsprshts={
	{0, 32},
	{5, 33,34,35},
	{5, 36,37,38},
	{0, 39}
}

spearsprshts={
	{0, 48},
	{5, 49,50,51},
	{5, 52,53,54},
	{0, 55}
}

--swords
sword_1=newitem(true)
sword_1.sprshts=swordsprshts
sword_1.pals={1,9, 2,6, 3,7}
-- todo:add attack speed

--spears
spear_1=newitem(true)
spear_1.sprshts=spearsprshts
spear_1.pals={1,4, 2,6}

-- shields
shield_1=newitem(true)
shield_1.sprshts=shieldsprshts
shield_1.pals={1,6, 2,13}

-- helmets
helmet_1=newitem()
helmet_1.pals={1,15, 4,15}

-- armor
armor_1=newitem()
armor_1.pals={2,5}

-- shoes
shoes_1=newitem()
shoes_1.pals={3,4}



-- actor types

-- gubbe
g=newactor()
g.x=28
g.y=64
g.spd=1
g.state=idling
g.sprshts={
	{0,0},
	{5,1,2,3},
	{5,4,5,6},
	{0,7}
}
g.items={
	helmet_1,
	armor_1,
	shoes_1,
}
g.weapon=sword_1
g.shield=shield_1

-- bat
function newbat()
	a=newactor()
	a.sprshts={
		{6, 64,65},
	}
	a.decide=function()
		a.x+=a.spd
	end
	return a
end


-- game callbacks
b=newbat()
-- collections
actors={g,g.weapon,g.shield,b}

-- counters
t=0

function _init()
	-- apply pals from items
	for i in all(g.items) do
		if not i.isactor then
 		for c in all(i.pals) do
 			add(g.pals,c)
 		end
 	end
	end
end

function _update()
	-- counters
	t+=1
	
	-- move gubbe
	newstate=idling
	newdir=none
	
	if btn(0) then
		newdir=w
		newstate=walking
	end
	if btn(1) then
		newdir=e
		newstate=walking
	end
	if btn(2) then
		newdir+=n
		newstate=walking
	end
	if btn(3) then
		newdir+=s
		newstate=walking
	end
	
	-- blocking
	if btn(4) then
		newstate=blocking
	end
	
	-- attacking
	if btn(5) then
		newstate=attacking
	end
	
	-- update gubbe
	g.newstate=newstate
	g.newdir=newdir
	
	-- update actors
	for a in all(actors) do
		updateactor(a)
	end
	
	-- items to follow gubbe
	if g.weapon then
 	g.weapon.x=g.x+2
 	g.weapon.y=g.y
 	g.weapon.state=g.state
 	g.weapon.curframe=g.curframe
	end
	
	if g.shield then
 	g.shield.x=g.x
 	g.shield.y=g.y
 	g.shield.state=g.state
 	g.shield.curframe=g.curframe
	end
	
	-- animate actors
	for a in all(actors) do
  animspd=a.sprshts[a.state][1]
  animlen=#a.sprshts[a.state]-1
  if animspd==0 then
  	a.curframe=0
  elseif t%animspd==0 then
  	a.curframe+=1
  	if a.curframe>=animlen then
  		a.curframe=0
  	end
  end
 end
 
 -- update camera
	camera(g.x-40,0)
end

function _draw()
	-- reset
	pal(0)
	cls(0)
	
	-- draw bg
	for x=0,16 do
		for y=0,16 do
			pset(x*8,y*8,1)
		end
	end
 
 -- draw actors
 for a in all(actors) do
 	i=1
 	for c in all(a.pals) do
 		if i%2==0 then
 			pal(a.pals[i-1],c)
 		end
 		i+=1
 	end
 	spr(a.sprshts[a.state][a.curframe+2],a.x,a.y)
 	pal()
 end
end

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00044000000440000000000000044000000044000004400000044000000440000000000000000000000000000000000000000000000000000000000000000000
0001f0000001f000000440000001f00000001f000001f0000001f0000001f0000000000000000000000000000000000000000000000000000000000000000000
00020000000200000001f00000020000000020000022000000220000000200000000000000000000000000000000000000000000000000000000000000000000
00022200002222000002000000222200000222200002000000020000000220000000000000000000000000000000000000000000000000000000000000000000
00020000000200000022220000020000000020000002000000020000000200000000000000000000000000000000000000000000000000000000000000000000
00303000003030000003000000303000000303000030300000303000003030000000000000000000000000000000000000000000000000000000000000000000
00303000000030000003000000300000003003000030300000303000003030000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000030002210000022100000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000003300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000200000002000000000000000200000000330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00002000000020000000020000002000000000330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000000100000000200000010000000012220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000000000000000000000000000000000000000
11100000111000000000000011100000011100001110000011100000000012100000000000000000000000000000000000000000000000000000000000000000
12100000121000001110000012100000012100001210000012100000000012100000000000000000000000000000000000000000000000000000000000000000
12100000121000001210000012100000012100001210000012100000000001000000000000000000000000000000000000000000000000000000000000000000
01000000010000001210000001000000001000000100000001000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00002000000020000000000000002000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000
00002000000020000000200000002000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000
00001000000010000000200000001000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000
00001000000010000000100000001000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000
00001000000010000000100000001000011111221111220011112200000010000000000000000000000000000000000000000000000000000000000000000000
00001000000010000000100000001000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00001000000010000000100000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00020200000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00022200000222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00002000000202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
