pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-- tunnel tanks
-- by ironchest games

printh('debug started','debug',true)
function debug(_s1,_s2,_s3,_s4,_s5,_s6,_s7,_s8)
 local ss={_s2,_s3,_s4,_s5,_s6,_s7,_s8}
 local result=tostr(_s1)
 for s in all(ss) do
  result=result..', '..tostr(s)
 end
 printh(result,'debug',false)
end

function isobjectscolliding(a,b)
 return a.x < b.x+7 and
        a.x+7 > b.x and
        a.y < b.y+7 and
        a.y+7 > b.y and b
end

function getoppositedirection(_d)
 if _d == 0 then
  return 1
 elseif _d == 1 then
  return 0
 elseif _d == 2 then
  return 3
 elseif _d == 3 then
  return 2
 end
end

function getgamemapvaluefromscreenpos(_gamemap,_x,_y)
 return _gamemap[flr(_y/8)][flr(_x/8)]
end

-- note: tests if there is floor in all diagonals
-- note: use this after getsurrounding floor returns only floors
function isoutinopen(_gamemap,_tankx,_tanky)

 -- test upper left
 if gamemap[flr((_tanky-1)/8)][flr((_tankx-1)/8)] != 2 then
  return
 end

 -- test upper right
 if gamemap[flr((_tanky-1)/8)][flr((_tankx+8)/8)] != 2 then
  return
 end
 
 -- test lower right
 if gamemap[flr((_tanky+8)/8)][flr((_tankx+8)/8)] != 2 then
  return
 end

 -- test lower left
 if gamemap[flr((_tanky+8)/8)][flr((_tankx-1)/8)] != 2 then
  return
 end

 -- ... there's floor all around
 return true
end

function getsurroundingfloor(_gamemap,_tankx,_tanky)
 local _result={floorcount=0}

 -- test left
 if gamemap[flr((_tanky)/8)][flr((_tankx-1)/8)] == 2 and
    gamemap[flr((_tanky+7)/8)][flr((_tankx-1)/8)] == 2 then
  _result[0]=true
 end

 -- test right
 if gamemap[flr((_tanky)/8)][flr((_tankx+8)/8)] == 2 and
    gamemap[flr((_tanky+7)/8)][flr((_tankx+8)/8)] == 2 then
  _result[1]=true
 end
 
 -- test up
 if gamemap[flr((_tanky-1)/8)][flr((_tankx)/8)] == 2 and
    gamemap[flr((_tanky-1)/8)][flr((_tankx+7)/8)] == 2 then
  _result[2]=true
 end

 -- test down
 if gamemap[flr((_tanky+8)/8)][flr((_tankx)/8)] == 2 and
    gamemap[flr((_tanky+8)/8)][flr((_tankx+7)/8)] == 2 then
  _result[3]=true
 end

 -- count surrounding floors
 for i=0,3 do
  if _result[i] then
   _result.floorcount+=1
  end
 end
 
 return _result
end

function positionisonfloor(_gamemap,_tankx,_tanky)
 return _gamemap[flr((_tanky+0)/8)][flr((_tankx+0)/8)] == 2 and
        _gamemap[flr((_tanky+0)/8)][flr((_tankx+7)/8)] == 2 and
        _gamemap[flr((_tanky+7)/8)][flr((_tankx+7)/8)] == 2 and
        _gamemap[flr((_tanky+7)/8)][flr((_tankx+0)/8)] == 2
end

function firebullet(tank)
 local _direction=tank.direction
 local _offx=0
 local _offy=0

 if tank.isreversing then
  if _direction == 0 then
   _direction=1
  elseif _direction == 1 then
   _direction=0
  elseif _direction == 2 then
   _direction=3
  elseif _direction == 3 then
   _direction=2
  end
 end

 if _direction == 0 then
  _offx=0
  _offy=1
 elseif _direction == 1 then
  _offx=6
  _offy=1
 elseif _direction == 2 then
  _offx=3
  _offy=0
 elseif _direction == 3 then
  _offx=4
  _offy=6
 end

 return {
  x=tank.x+_offx,
  y=tank.y+_offy,
  direction=_direction,
  spd=2,
 }
end

function newparticle(_x,_y,_lifetime,_radius,_colors)
 return {
  x=_x,
  y=_y,
  r=_radius,
  lifetime=_lifetime,
  lifecounter=_lifetime,
  colors=_colors,
 }
end

function newwallexplosion(_x,_y)
 for i=1,1 do
  add(particles,newparticle(_x,_y,12,5,{
   [0]=4,9,15,7,7,7
  }))
 end
end

function newtank(id,x,y)
 return {
  x=x,
  y=y,
  id=id,
  spd=0,
  direction=1, -- note: direction currently going
  -- isreversing=false,
  -- primarydir=nil,
  -- secondarydir=nil,
 }
end

-- game vars
tanks={}
directionmap={
 [0]={-1,0},
 [1]={1,0},
 [2]={0,-1},
 [3]={0,1},
}
gamemap={}
bullets={}
particles={}

players={
 {keystatuses={}},
 {keystatuses={}},
 {keystatuses={}},
 {keystatuses={}}
}

keydowns={
 [0]=function (player)
  player.keydir=0
 end,
 [1]=function (player)
  player.keydir=1
 end,
 [2]=function (player)
  player.keydir=2
 end,
 [3]=function (player)
  player.keydir=3
 end,
}
keyups={
 [0]=function (player)
  if player.keydir == 0 then
   player.keydir=nil
  end
 end,
 [1]=function (player)
  if player.keydir == 1 then
   player.keydir=nil
  end
 end,
 [2]=function (player)
  if player.keydir == 2 then
   player.keydir=nil
  end
 end,
 [3]=function (player)
  if player.keydir == 3 then
   player.keydir=nil
  end
 end,
}

tick=0

function _init()
 poke(0x5f5c,5)
 
 -- reset timers
 tick=0

 -- create map
 for _y=0,15 do
  gamemap[_y]={}
  for _x=0,16 do
   local _col=sget(_x,64+_y)
   if _col != 1 and _col != 2 then
    if _col == 8 then -- add red tank
     add(tanks,newtank(1,_x*8,_y*8))
    elseif _col == 10 then -- add yellow tank
     add(tanks,newtank(2,_x*8,_y*8))
    elseif _col == 11 then -- add green tank
     add(tanks,newtank(3,_x*8,_y*8))
    elseif _col == 12 then -- add blue tank
     add(tanks,newtank(4,_x*8,_y*8))
    end
    _col=2 -- note: make tile ground
   end
   gamemap[_y][_x]=_col
  end
 end
end

function _update60()

 tick+=1
 
 -- reset
 local _spd=0.5

 for _playerindex,tank in pairs(tanks) do

  local player=players[_playerindex]
  local keystatuses=player.keystatuses

  -- fire bullet
  if btnp(4,_playerindex-1) then
   add(bullets,firebullet(tank))
  end

  -- decelration
  tank.spd=max(0,tank.spd*0.9)

  local _direction=nil

  for i=0,3 do
   if btn(i,_playerindex-1) and keystatuses[i] == nil then
    keystatuses[i]=true
    keydowns[i](player)
   end

   if (not btn(i,_playerindex-1)) and keystatuses[i] then
    keystatuses[i]=nil
    keyups[i](player)
   end
  end

  -- get surrouning floors
  local surroundingfloor=getsurroundingfloor(gamemap,tank.x,tank.y)

  -- special input handling when not near any walls
  if surroundingfloor.floorcount == 4 and
     (isoutinopen(gamemap,tank.x-1,tank.y-1) or
     isoutinopen(gamemap,tank.x+1,tank.y-1) or
     isoutinopen(gamemap,tank.x+1,tank.y+1) or
     isoutinopen(gamemap,tank.x-1,tank.y+1)) then

   local _keycount=0
   local _onlykey=nil
   for i=0,3 do
    if keystatuses[i] then
     _keycount+=1
     _onlykey=i
    end
   end

   if _keycount == 1 then
    player.keydir=_onlykey
   end

   _direction=player.keydir

  -- input handling near walls
  else

    -- reset dirs
   tank.primarydir=nil
   tank.secondarydir=nil

   -- get input
   if btn(0,_playerindex-1) then
    if tank.direction == 0 then
     tank.primarydir=0
    else
     tank.secondarydir=0
    end
   end

   if btn(1,_playerindex-1) then
    if tank.direction == 1 then
     tank.primarydir=1
    else
     tank.secondarydir=1
    end
   end

   if btn(2,_playerindex-1) then
    if tank.direction == 2 then
     tank.primarydir=2
    else
     tank.secondarydir=2
    end
   end

   if btn(3,_playerindex-1) then
    if tank.direction == 3 then
     tank.primarydir=3
    else
     tank.secondarydir=3
    end
   end

   -- prioritize secondary direction
   -- so if there is a turn available and
   -- we're pressing it, we're going to turn
   _direction=tank.primarydir

   if tank.secondarydir == nil then
    tank.secondarydir=tank.primarydir
   end

   if tank.secondarydir == 0 and surroundingfloor[0] then
    _direction=0
   elseif tank.secondarydir == 1 and surroundingfloor[1] then
    _direction=1
   elseif tank.secondarydir == 2 and surroundingfloor[2] then
    _direction=2
   elseif tank.secondarydir == 3 and surroundingfloor[3] then
    _direction=3
   end
  end

  -- consider the input
  if _direction == 0 then
   if tank.direction == 1 then
    tank.isreversing=not tank.isreversing
   end
   tank.direction=0
   tank.spd=_spd
  end

  if _direction == 1 then
   if tank.direction == 0 then
    tank.isreversing=not tank.isreversing
   end
   tank.direction=1
   tank.spd=_spd
  end

  if _direction == 2 then
   if tank.direction == 3 then
    tank.isreversing=not tank.isreversing
   end
   tank.direction=2
   tank.spd=_spd
  end

  if _direction == 3 then
   if tank.direction == 2 then
    tank.isreversing=not tank.isreversing
   end
   tank.direction=3
   tank.spd=_spd
  end

  -- collision w other tanks
  for other in all(tanks) do
   if tank != other and isobjectscolliding(tank,other) then
    _direction=getoppositedirection(_direction)
   end
  end

  -- move tank
  local _movement=directionmap[tank.direction]
  local _nextx=tank.x+_movement[1]*tank.spd
  local _nexty=tank.y+_movement[2]*tank.spd

  -- test if next is on floor
  if positionisonfloor(gamemap,_nextx,_nexty) then
   tank.x=_nextx
   tank.y=_nexty
  end
 end

 -- move bullets
 for bullet in all(bullets) do
  local _vxfactor=-1
  local _vyfactor=0
  if bullet.direction == 1 then
   _vxfactor=1
  elseif bullet.direction == 2 then
   _vxfactor=0
   _vyfactor=-1
  elseif bullet.direction == 3 then
   _vxfactor=0
   _vyfactor=1
  end

  bullet.x+=_vxfactor*bullet.spd
  bullet.y+=_vyfactor*bullet.spd

  add(particles,newparticle(bullet.x+rnd(1.5),bullet.y+rnd(1.5),7,1,{
   [0]=4,
   [1]=9,
   [2]=15,
   [3]=7,
  }))

  -- walls collision
  local _gamemapval=getgamemapvaluefromscreenpos(gamemap,bullet.x,bullet.y)
  if _gamemapval != 2 then
   del(bullets,bullet)
   newwallexplosion(bullet.x,bullet.y)
  end
 end

 -- update particles
 for particle in all(particles) do
  particle.lifecounter-=1
  if particle.lifecounter <= 0 then
   del(particles,particle)
  end
 end
 
end

function _draw()
 cls(1)

 -- use white instead of black as transparent
 palt(0,false)
 palt(7,true)

 -- draw map
 for _y=0,#gamemap do
  for _x=0,#gamemap[_y] do
   local mapval=gamemap[_y][_x]
   rectfill(_x*8,_y*8,_x*8+8,_y*8+8,mapval)
  end
 end

 -- draw tanks
 for _tankidx,tank in pairs(tanks) do
  local _flippedh=true
  local _flippedv=false
  local _frame=0
  local _driveframeoff=0
  local _weaponoffy=0
  local _direction=tank.direction

  if tank.isreversing then
   local _directionreversmap={
    [0]=1,
    [1]=0,
    [2]=3,
    [3]=2,
   }
   _direction=_directionreversmap[tank.direction]
  end

  if _direction == 1 then
   _flippedh=false
  end

  if _direction == 2 then
   _frame=2
  elseif _direction == 3 then
   _frame=2
   _flippedv=true -- note: not used by tank
   _weaponoffy=1
  end

  if tick%10/5 > 1 and tank.spd > 0.05 then
   _driveframeoff=1
  end

  spr(_frame+_driveframeoff+(_tankidx*4)-4,tank.x,tank.y,1,1,_flippedh)

  -- draw tank weapon
  spr(
    32+_frame,
    tank.x,
    tank.y+_weaponoffy,
    1,1,_flippedh,_flippedv)
 end

 -- draw particles
 for particle in all(particles) do
  local _timepart=particle.lifecounter/particle.lifetime
  local _r=particle.r*_timepart
  local _colors=particle.colors
  circfill(
    particle.x,
    particle.y,
    _r,
    _colors[flr(_timepart*#_colors)])
  circ(
    particle.x,
    particle.y,
    _r,
    _colors[max(0,flr(_timepart*(#_colors-1)))])
 end

 -- draw bullets
 for bullet in all(bullets) do
  local _w=2
  local _h=1
  if bullet.direction >= 2 then
   _w=1
   _h=2
  end
  rectfill(
    bullet.x,
    bullet.y,
    bullet.x+_w,
    bullet.y+_h,
    7)
 end

 -- draw gui
 rectfill(0,0,128,9,0)
end

__gfx__
70000007700000077777777777777777700000077000000777777777777777777000000770000007777777777777777770000007700000077777777777777777
05050507005050077000000770000007050505070050500770000007700000070505050700505007700000077000000705050507005050077000000770000007
088888070888880705088050000880000bbbbb070bbbbb07050bb050000bb0000aaaaa070aaaaa07050aa050000aa0000ccccc070ccccc07050cc050000cc000
088888070888880700088000050880500bbbbb070bbbbb07000bb000050bb0500aaaaa070aaaaa07000aa000050aa0500ccccc070ccccc07000cc000050cc050
022222070222220705088050000880000333330703333307050bb050000bb0000999990709999907050aa050000aa0000111110701111107050cc050000cc000
000000070000000700088000050880500000000700000007000bb000050bb0500000000700000007000aa000050aa0500000000700000007000cc000050cc050
05050507005050070502205000022000050505070050500705033050000330000505050700505007050990500009900005050507005050070501105000011000
00000077000000777000000770000007000000770000007770000007700000070000007700000077700000077000000700000077000000777000000770000007
70000007700000077777777777777777700000077000000777777777777777777000000770000007777777777777777770000007700000077777777777777777
05050507005050077000000770000007050505070050500770000007700000070505050700505007700000077000000705050507005050077000000770000007
0eeeee070eeeee07050ee050000ee0000ddddd070ddddd07050dd050000dd0000444440704444407050440500004400006666607066666070506605000066000
0eeeee070eeeee07000ee000050ee0500ddddd070ddddd07000dd000050dd0500444440704444407000440000504405006666607066666070006600005066050
0ddddd070ddddd07050ee050000ee0000111110701111107050dd050000dd000022222070222220705044050000440000ddddd070ddddd070506605000066000
0000000700000007000ee000050ee0500000000700000007000dd000050dd0500000000700000007000440000504405000000007000000070006600005066050
0505050700505007050dd050000dd00005050507005050070501105000011000050505070050500705022050000220000505050700505007050dd050000dd000
00000077000000777000000770000007000000770000007770000007700000070000007700000077700000077000000700000077000000777000000770000007
77777777000000007700077700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77770000000000007706077700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77770660000000007706077700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777000000000007700077700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777000000007777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777000000007777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777000000007777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777000000007777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111112111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111112111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111112122111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1182222222222c110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11121212111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11122212222222210000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111112111222110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11112222211212110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11112112111212210000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11112122221211110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111a122221221110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111122221b11110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111222221111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111112211111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
